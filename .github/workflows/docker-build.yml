name: docker-build-deploy

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Make release?'
        required: true
        type: boolean
        default: false
      new_tag:
        description: 'new tag release only'
        required: false
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        if: ${{ inputs.release == false }}
        with:
          push: true
          tags: primmruuhub/devops-assignment:0.0.1

      - name: Set sha
        if: ${{ inputs.release == true }}
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set new_tag
        if: ${{ inputs.release == true }}
        id: set_tag
        run: |
          if [ "${{ inputs.new_tag }}" == "" ]; then
            echo "new_tag=${{ steps.vars.outputs.sha_short }}" >> $GITHUB_ENV
          else
            echo "new_tag=${{ inputs.new_tag }}" >> $GITHUB_ENV
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        if: ${{ inputs.release == true }}
        with:
          push: true
          tags: primmruuhub/devops-assignment:${{ env.new_tag }}

      - name: Update image
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'Kustomize/overlays/dev/kustomization.yaml'
          propertyPath: 'images.newTag'
          value: ${{ env.new_tag }}
          createPR: true
          branch: main
          message: 'Update Image Version to ${{ env.new_tag }}' 
